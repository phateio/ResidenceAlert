buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
}

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.30'
    id "com.github.johnrengelman.shadow" version "5.0.0"
}

group package_group
version plugin_version

apply plugin: 'kotlin'
apply plugin: 'com.github.johnrengelman.shadow'


sourceCompatibility = 1.8

repositories {
    mavenCentral()
//    maven {
//        // spigot
//        url "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
//    }
//    maven {
//        // bungee
//        url "https://oss.sonatype.org/content/groups/public/"
//    }
    maven {
        // paper
        url "https://papermc.io/repo/repository/maven-public/"
    }
    
    mavenLocal()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile "org.jetbrains.kotlin:kotlin-reflect"
    compileOnly group: "com.destroystokyo.paper", name: "paper-api", version: spigot_version
//    compileOnly group: "com.destroystokyo.paper", name: "paper", version: spigot_version
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

shadowJar {
    dependencies {
        include(dependency("org.jetbrains.kotlin:kotlin-stdlib-jdk8"))
        include(dependency("org.jetbrains.kotlin:kotlin-stdlib"))
        include(dependency("org.jetbrains.kotlin:kotlin-reflect"))
    }
}

//task replaceToken (type: Copy) {
//    from 'input'
//    include 'src/main/resources/plugin.yml'
//    into 'output'
//
//    expand([
//            version: version,
//            name: rootProject.name,
//            description: description,
//            buildDate: new Date()
//    ])
//}

processResources {
    from (sourceSets.main.resources.srcDirs) {
        expand ([
                version: version,
                name: plugin_name,
                description: plugin_description,
                main_class: plugin_main_class,
                buildDate: new Date()
        ])
        include 'plugin.yml'
    }

    from (sourceSets.main.resources.srcDirs) {
        exclude 'plugin.yml'
    }
}

build.dependsOn(shadowJar)
//jar.dependsOn(shadowJar)
//shadowJar.dependsOn(replaceToken)